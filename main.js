(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}};e.d({},{p:()=>a});var t={};e.r(t);const n=(()=>{let e=0;return{getCount:()=>e,incrementCount:()=>e++}})(),o=(e,t=[])=>{const o=n.getCount();n.incrementCount();const d=t;return{getName:()=>e,getId:()=>o,getToDos:()=>d,addToDos:e=>d.push()}};function d(){if(a.getStorage().map((e=>e.getName())).some((e=>e==document.getElementById("projectInput").value)))alert("The names have to be unique"),document.getElementById("projectInput").innerHTML="";else if(""==document.getElementById("projectInput").value.replace(/\s/g,""))alert("You must add a name to your project"),document.getElementById("projectInput").innerHTML="";else{const e=o(document.getElementById("projectInput").value);localStorage.setItem(`project${localStorage.length}`,JSON.stringify({name:e.getName(),id:e.getId(),todos:e.getToDos()})),a.pushStorage(e);const n=document.getElementById("projectList"),d=document.createElement("li");d.id=e.getId(),d.innerHTML=e.getName(),n.appendChild(d),d.addEventListener("click",(()=>{console.log(e.getId()),t.activeProject=a.getStorage()[e.getId()]})),r()}}function c(){r()}function r(){let e=document.getElementById("mainCont");for(;e.firstChild;)e.removeChild(e.lastChild)}function l(e){const n=document.getElementById("projectList"),o=document.createElement("li");o.id=e.getId(),o.innerHTML=e.getName(),n.appendChild(o),o.addEventListener("click",(()=>{console.log(e.getId()),t.activeProject=a.getStorage()[e.getId()]}))}const a=(()=>{const e=[];return{getStorage:()=>e,pushStorage:t=>e.push(t)}})();!function(){for(let e=0;e<localStorage.length;e++){const t=JSON.parse(localStorage.getItem(`project${e}`)),n=o(t.name,t.todos);a.pushStorage(n),l(n)}}(),document.getElementById("addProject").addEventListener("click",(()=>{!function(){let e=document.getElementById("mainCont");for(;e.firstChild;)e.removeChild(e.lastChild);let t=document.createElement("div");t.id="projectAddCont",e.appendChild(t);let n=document.createElement("input");n.id="projectInput",n.placeholder="Project's name",t.appendChild(n);let o=document.createElement("button");o.id="addBtn",o.innerHTML="Add",t.appendChild(o);let r=document.createElement("button");r.id="cancelBtn",r.innerHTML="Cancel",t.appendChild(r),o.addEventListener("click",d),r.addEventListener("click",c),n.focus()}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,