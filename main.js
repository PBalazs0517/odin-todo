(()=>{"use strict";var e={d:(t,n)=>{for(var d in n)e.o(n,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:n[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}};e.d({},{p:()=>s});var t={};e.r(t);const n=(()=>{let e=0;return{getCount:()=>e,incrementCount:()=>e++}})(),d=(e,t=[])=>{const d=n.getCount();n.incrementCount();const o=t;return{getName:()=>e,getId:()=>d,getToDos:()=>o,addToDos:e=>o.push(e),updateToDo:(e,t)=>o[e]=t}},o=(e,t,n,d=!1)=>{let o=d;return{getName:()=>e,getDate:()=>t,getPriority:()=>n,getState:()=>o}};function a(){let e=t.activeProject.getToDos(),n=document.getElementById("mainCont");for(;n.children.length>2;)n.removeChild(n.lastChild);e.forEach(((e,d)=>{let a=o(e.name,e.date,e.priority,e.state),c=document.createElement("div");c.id="todoCont",n.appendChild(c);let i=document.createElement("h2");i.classList.add("todoName"),i.innerHTML=a.getName(),c.appendChild(i);let l=document.createElement("p");l.classList.add("todoDate"),l.innerHTML=a.getDate(),c.appendChild(l);let r=document.createElement("p");r.classList.add("todoPriority"),r.innerHTML=a.getPriority(),c.appendChild(r);let m=document.createElement("input");m.type="checkbox",m.id=`todoState${d}`,m.classList.add("todoState"),m.checked=a.getState(),c.appendChild(m),m.addEventListener("click",(n=>{let a=document.getElementById(n.target.id);console.log(a);let c=o(e.name,e.date,e.priority,a.checked);t.activeProject.updateToDo(d,{name:c.getName(),date:c.getDate(),priority:c.getPriority(),state:c.getState()}),localStorage.setItem(`project${t.activeProject.getId()}`,JSON.stringify({name:t.activeProject.getName(),id:t.activeProject.getId(),todos:t.activeProject.getToDos()})),s.updateProject(t.activeProject.getId(),t.activeProject)}))}))}let c=!1;function i(){let e=document.getElementById("mainCont"),t=document.createElement("button");t.id="addTodo",t.classList.add("addProjectAndTodo");let n=document.createElement("p");n.innerHTML="+",t.appendChild(n),e.appendChild(t),t.addEventListener("click",(()=>{c||function(){c=!0;let e=document.getElementById("mainCont"),t=document.createElement("div");t.id="todoInterface",e.appendChild(t);let n=document.createElement("div");n.id="todoForm",t.appendChild(n);let d=document.createElement("input");d.id="todoNameIn",n.appendChild(d);let o=document.createElement("input");o.type="date",o.id="todoDateIn",n.appendChild(o);let a=document.createElement("select");a.id="todoPriorityIn",n.appendChild(a),["low","normal","high"].forEach((e=>{let t=document.createElement("option");t.innerHTML=e,t.value=e,a.appendChild(t)}));let i=document.createElement("button");i.id="addBtnTodo",i.classList.add("addBtn"),i.innerHTML="Add",t.appendChild(i);let m=document.createElement("button");m.id="cancelBtnTodo",m.classList.add("cancelBtn"),m.innerHTML="Cancel",t.appendChild(m),i.addEventListener("click",l),m.addEventListener("click",r)}()}))}function l(){if(""==document.getElementById("todoNameIn").value.replace(/\s/g,"")||""==document.getElementById("todoDateIn").value)alert("Fill out all the menu options");else{let e=o(document.getElementById("todoNameIn").value,document.getElementById("todoDateIn").value,document.getElementById("todoPriorityIn").value);t.activeProject.addToDos({name:e.getName(),date:e.getDate(),priority:e.getPriority(),state:e.getState()}),localStorage.setItem(`project${t.activeProject.getId()}`,JSON.stringify({name:t.activeProject.getName(),id:t.activeProject.getId(),todos:t.activeProject.getToDos()})),s.updateProject(t.activeProject.getId(),t.activeProject),t.activeProject=s.getStorage()[t.activeProject.getId()],document.getElementById("mainCont").removeChild(document.getElementById("todoInterface")),c=!1,a()}}function r(){document.getElementById("mainCont").removeChild(document.getElementById("todoInterface")),c=!1}function m(){let e=document.getElementById("mainCont");if(s.getStorage().map((e=>e.getName())).some((e=>e==document.getElementById("projectInput").value)))alert("The names have to be unique"),document.getElementById("projectInput").innerHTML="";else if(""==document.getElementById("projectInput").value.replace(/\s/g,""))alert("You must add a name to your project"),document.getElementById("projectInput").innerHTML="";else{const n=d(document.getElementById("projectInput").value);localStorage.setItem(`project${localStorage.length}`,JSON.stringify({name:n.getName(),id:n.getId(),todos:n.getToDos()})),s.pushStorage(n);const o=document.getElementById("projectList"),c=document.createElement("li");c.id=n.getId(),c.innerHTML=n.getName(),o.appendChild(c),c.addEventListener("click",(()=>{let e=document.getElementById("mainCont");g(e),t.activeProject=s.getStorage()[n.getId()];let d=document.createElement("h1");d.classList.add("title"),d.innerHTML=t.activeProject.getName(),e.appendChild(d),i(),a()})),g(e)}}function u(){g(mainCont)}function g(e){for(;e.firstChild;)e.removeChild(e.lastChild);c=!1}function p(e){const n=document.getElementById("projectList"),d=document.createElement("li");d.id=e.getId(),d.innerHTML=e.getName(),n.appendChild(d),d.addEventListener("click",(()=>{let n=document.getElementById("mainCont");!function(e){for(;e.firstChild;)e.removeChild(e.lastChild);c=!1}(n),t.activeProject=s.getStorage()[e.getId()];let d=document.createElement("h1");d.classList.add("title"),d.innerHTML=t.activeProject.getName(),n.appendChild(d),i(),a()}))}const s=(()=>{const e=[];return{getStorage:()=>e,pushStorage:t=>e.push(t),updateProject:(t,n)=>e[t]=n}})();!function(){for(let e=0;e<localStorage.length;e++){const t=JSON.parse(localStorage.getItem(`project${e}`)),n=d(t.name,t.todos);s.pushStorage(n),p(n)}}(),document.getElementById("addProject").addEventListener("click",(()=>{!function(){let e=document.getElementById("mainCont");for(;e.firstChild;)e.removeChild(e.lastChild);let t=document.createElement("div");t.id="projectAddCont",e.appendChild(t);let n=document.createElement("input");n.id="projectInput",n.placeholder="Project's name",t.appendChild(n);let d=document.createElement("button");d.id="addBtn",d.classList.add("addBtn"),d.innerHTML="Add",t.appendChild(d);let o=document.createElement("button");o.id="cancelBtn",o.classList.add("cancelBtn"),o.innerHTML="Cancel",t.appendChild(o),d.addEventListener("click",m),o.addEventListener("click",u),n.focus()}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,