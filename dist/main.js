(()=>{"use strict";const e=(e,t=[])=>{let n=t;return{getName:()=>e,getToDos:()=>n,addToDos:e=>n.push()}};function t(){const t=e(""!=document.getElementById("projectInput").value?document.getElementById("projectInput").value:"New project"),n=document.getElementById("projectList");localStorage.setItem(`project${localStorage.length}`,JSON.stringify({name:t.getName(),todos:t.getToDos()}));const o=document.createElement("li");o.id=t.getName(),o.innerHTML=t.getName(),n.appendChild(o)}!function(){for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t),o=JSON.parse(localStorage.getItem(n)),d=e(o.name,o.todos),l=document.getElementById("projectList"),c=document.createElement("li");c.id=d.getName(),c.innerHTML=d.getName(),l.appendChild(c)}}(),document.getElementById("addProject").addEventListener("click",(()=>{!function(){let e=document.getElementById("todosCont");for(;e.firstChild;)e.removeChild(e.lastChild);let n=document.createElement("div");n.id="projectAddCont",e.appendChild(n);let o=document.createElement("input");o.id="projectInput",o.placeholder="Project's name",n.appendChild(o);let d=document.createElement("button");d.id="addBtn",d.innerHTML="Add",n.appendChild(d);let l=document.createElement("button");l.id="cancelBtn",l.innerHTML="Cancel",n.appendChild(l),d.addEventListener("click",t),o.focus()}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFRQSxFQVJnQixDQUFDQSxFQUFNQyxFQUFZLE1BRS9CLElBQUlDLEVBQVFELEVBR1osTUFBTyxDQUFDRSxRQUpRLElBQU1ILEVBSUxJLFNBREEsSUFBTUYsRUFDSUcsU0FGVEMsR0FBU0osRUFBTUssT0FFRyxFQ3dCeEMsU0FBU0MsSUFDTCxNQUFNQyxFQUFhLEVBQXlELElBQWpEQyxTQUFTQyxlQUFlLGdCQUFnQkMsTUFBY0YsU0FBU0MsZUFBZSxnQkFBZ0JDLE1BQVEsZUFDM0hDLEVBQUtILFNBQVNDLGVBQWUsZUFDbkNHLGFBQWFDLFFBQVEsVUFBVUQsYUFBYUUsU0FBVUMsS0FBS0MsVUFBVSxDQUFDbEIsS0FBTVMsRUFBV04sVUFBV2dCLE1BQU9WLEVBQVdMLGNBQ3BILE1BQU1nQixFQUFRVixTQUFTVyxjQUFjLE1BQ3JDRCxFQUFNRSxHQUFLYixFQUFXTixVQUN0QmlCLEVBQU1HLFVBQVlkLEVBQVdOLFVBQzdCVSxFQUFHVyxZQUFZSixFQUNuQixFQ25DZSxXQUNYLElBQUksSUFBSUssRUFBSSxFQUFHQSxFQUFJWCxhQUFhRSxPQUFRUyxJQUFLLENBQ3pDLE1BQU1DLEVBQU1aLGFBQWFZLElBQUlELEdBQ3ZCYixFQUFRSyxLQUFLVSxNQUFNYixhQUFhYyxRQUFRRixJQUN4Q0csRUFBVSxFQUFRakIsRUFBTVosS0FBTVksRUFBTU8sT0FDcENOLEVBQUtILFNBQVNDLGVBQWUsZUFDN0JTLEVBQVFWLFNBQVNXLGNBQWMsTUFDckNELEVBQU1FLEdBQUtPLEVBQVExQixVQUNuQmlCLEVBQU1HLFVBQVlNLEVBQVExQixVQUMxQlUsRUFBR1csWUFBWUosRUFDbkIsQ0FDSixDQ1ZBVSxHQUVBcEIsU0FBU0MsZUFBZSxjQUFjb0IsaUJBQWlCLFNBQVMsTUZIakQsV0FDWCxJQUFJQyxFQUFZdEIsU0FBU0MsZUFBZSxhQUN4QyxLQUFNcUIsRUFBVUMsWUFDWkQsRUFBVUUsWUFBWUYsRUFBVUcsV0FFcEMsSUFBSUMsRUFBTTFCLFNBQVNXLGNBQWMsT0FDakNlLEVBQUlkLEdBQUssaUJBQ1RVLEVBQVVSLFlBQVlZLEdBQ3RCLElBQUlDLEVBQWUzQixTQUFTVyxjQUFjLFNBQzFDZ0IsRUFBYWYsR0FBSyxlQUNsQmUsRUFBYUMsWUFBYyxpQkFDM0JGLEVBQUlaLFlBQVlhLEdBQ2hCLElBQUlFLEVBQVM3QixTQUFTVyxjQUFjLFVBQ3BDa0IsRUFBT2pCLEdBQUssU0FDWmlCLEVBQU9oQixVQUFZLE1BQ25CYSxFQUFJWixZQUFZZSxHQUNoQixJQUFJQyxFQUFZOUIsU0FBU1csY0FBYyxVQUN2Q21CLEVBQVVsQixHQUFLLFlBQ2ZrQixFQUFVakIsVUFBWSxTQUN0QmEsRUFBSVosWUFBWWdCLEdBR2hCRCxFQUFPUixpQkFBaUIsUUFBU3ZCLEdBRWpDNkIsRUFBYUksT0FDakIsQ0VyQklDLEVBQVksRyIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9wcm9qZXRzLmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9hZGQtcHJvamVjdC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvbG9hZFByb2plY3RzT25Mb2FkLmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQcm9qZWN0ID0gKG5hbWUsIHRvRG9zTGlzdCA9IFtdKSA9PiB7XG4gICAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IG5hbWU7XG4gICAgbGV0IHRvRG9zID0gdG9Eb3NMaXN0O1xuICAgIGNvbnN0IGFkZFRvRG9zID0gKHRvZG8pID0+IHRvRG9zLnB1c2goKTtcbiAgICBjb25zdCBnZXRUb0RvcyA9ICgpID0+IHRvRG9zO1xuICAgIHJldHVybiB7Z2V0TmFtZSwgZ2V0VG9Eb3MsIGFkZFRvRG9zfTtcbn0gXG5cbmV4cG9ydCBkZWZhdWx0IFByb2plY3Q7XG4iLCJpbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZXRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZFByb2plY3QoKSB7XG4gICAgbGV0IHRvZG9zQ29udCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2Rvc0NvbnQnKTtcbiAgICB3aGlsZSh0b2Rvc0NvbnQuZmlyc3RDaGlsZCkge1xuICAgICAgICB0b2Rvc0NvbnQucmVtb3ZlQ2hpbGQodG9kb3NDb250Lmxhc3RDaGlsZCk7XG4gICAgfVxuICAgIGxldCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkaXYuaWQgPSAncHJvamVjdEFkZENvbnQnO1xuICAgIHRvZG9zQ29udC5hcHBlbmRDaGlsZChkaXYpO1xuICAgIGxldCBwcm9qZWN0SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHByb2plY3RJbnB1dC5pZCA9ICdwcm9qZWN0SW5wdXQnO1xuICAgIHByb2plY3RJbnB1dC5wbGFjZWhvbGRlciA9ICdQcm9qZWN0XFwncyBuYW1lJztcbiAgICBkaXYuYXBwZW5kQ2hpbGQocHJvamVjdElucHV0KTtcbiAgICBsZXQgYWRkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYWRkQnRuLmlkID0gJ2FkZEJ0bic7XG4gICAgYWRkQnRuLmlubmVySFRNTCA9ICdBZGQnO1xuICAgIGRpdi5hcHBlbmRDaGlsZChhZGRCdG4pO1xuICAgIGxldCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjYW5jZWxCdG4uaWQgPSAnY2FuY2VsQnRuJztcbiAgICBjYW5jZWxCdG4uaW5uZXJIVE1MID0gJ0NhbmNlbCc7XG4gICAgZGl2LmFwcGVuZENoaWxkKGNhbmNlbEJ0bik7XG5cbiAgICAvL2J1dHRvbnMgZnVudGlvbmFsaXRpXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkQnRuTG9naWMpO1xuICAgIC8vUW9MIHRoaW5nc1xuICAgIHByb2plY3RJbnB1dC5mb2N1cygpO1xufTtcblxuZnVuY3Rpb24gYWRkQnRuTG9naWMoKSB7XG4gICAgY29uc3QgbmV3UHJvamVjdCA9IFByb2plY3QoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RJbnB1dCcpLnZhbHVlICE9IFwiXCIgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdElucHV0JykudmFsdWUgOiAnTmV3IHByb2plY3QnKTtcbiAgICBjb25zdCB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0TGlzdCcpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBwcm9qZWN0JHtsb2NhbFN0b3JhZ2UubGVuZ3RofWAsIEpTT04uc3RyaW5naWZ5KHtuYW1lOiBuZXdQcm9qZWN0LmdldE5hbWUoKSwgdG9kb3M6IG5ld1Byb2plY3QuZ2V0VG9Eb3MoKX0pKTtcbiAgICBjb25zdCBuZXdMaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgbmV3TGkuaWQgPSBuZXdQcm9qZWN0LmdldE5hbWUoKTtcbiAgICBuZXdMaS5pbm5lckhUTUwgPSBuZXdQcm9qZWN0LmdldE5hbWUoKTtcbiAgICB1bC5hcHBlbmRDaGlsZChuZXdMaSk7XG59O1xuXG4iLCJpbXBvcnQgUHJvamVjdCBmcm9tICcuL3Byb2pldHMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgbG9jYWxTdG9yYWdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGxvY2FsU3RvcmFnZS5rZXkoaSk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKTtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QodmFsdWUubmFtZSwgdmFsdWUudG9kb3MpO1xuICAgICAgICBjb25zdCB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0TGlzdCcpO1xuICAgICAgICBjb25zdCBuZXdMaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIG5ld0xpLmlkID0gcHJvamVjdC5nZXROYW1lKCk7XG4gICAgICAgIG5ld0xpLmlubmVySFRNTCA9IHByb2plY3QuZ2V0TmFtZSgpO1xuICAgICAgICB1bC5hcHBlbmRDaGlsZChuZXdMaSk7ICAgIFxuICAgIH1cbn0iLCJpbXBvcnQgYWRkUHJvamVjdCBmcm9tICcuL2FkZC1wcm9qZWN0LmpzJztcbmltcG9ydCBsb2FkUHJvamVjdHNPbkxvYWQgZnJvbSAnLi9sb2FkUHJvamVjdHNPbkxvYWQuanMnO1xuXG5sb2FkUHJvamVjdHNPbkxvYWQoKTtcblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZFByb2plY3QnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBhZGRQcm9qZWN0KCk7XG59KTsiXSwibmFtZXMiOlsibmFtZSIsInRvRG9zTGlzdCIsInRvRG9zIiwiZ2V0TmFtZSIsImdldFRvRG9zIiwiYWRkVG9Eb3MiLCJ0b2RvIiwicHVzaCIsImFkZEJ0bkxvZ2ljIiwibmV3UHJvamVjdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsInVsIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImxlbmd0aCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b2RvcyIsIm5ld0xpIiwiY3JlYXRlRWxlbWVudCIsImlkIiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJpIiwia2V5IiwicGFyc2UiLCJnZXRJdGVtIiwicHJvamVjdCIsImxvYWRQcm9qZWN0c09uTG9hZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b2Rvc0NvbnQiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJsYXN0Q2hpbGQiLCJkaXYiLCJwcm9qZWN0SW5wdXQiLCJwbGFjZWhvbGRlciIsImFkZEJ0biIsImNhbmNlbEJ0biIsImZvY3VzIiwiYWRkUHJvamVjdCJdLCJzb3VyY2VSb290IjoiIn0=